---
source: crates/clogbox-derive/src/enum.rs
expression: "prettyplease::unparse(&syn::parse_file(&output).unwrap())"
---
#[automatically_derived]
impl ::az::CastFrom<usize> for Params {
    fn cast_from(idx: usize) -> Self {
        match idx {
            0 => Self::Cutoff,
            1 => Self::Resonance,
            2 => Self::Drive,
            3 => Self::InputFM,
            _ => unreachable!(),
        }
    }
}
#[automatically_derived]
impl ::az::Cast<usize> for Params {
    fn cast(self) -> usize {
        match self {
            Self::Cutoff => 0,
            Self::Resonance => 1,
            Self::Drive => 2,
            Self::InputFM => 3,
        }
    }
}
#[automatically_derived]
impl ::clogbox_core::r#enum::Enum for Params {
    type Count = ::typenum::U4;
    fn name(&self) -> ::std::borrow::Cow<str> {
        match self {
            Self::Cutoff => ::std::borrow::Cow::Borrowed("Cutoff"),
            Self::Resonance => ::std::borrow::Cow::Borrowed("Resonance"),
            Self::Drive => ::std::borrow::Cow::Borrowed("Drive"),
            Self::InputFM => ::std::borrow::Cow::Borrowed("InputFM"),
        }
    }
}
