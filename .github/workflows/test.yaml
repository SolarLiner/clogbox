name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  rust:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [1.84, 1.85, 1.86]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Install cargo-make
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: --debug cargo-make
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    - name: Run CI
      run: cargo make ci
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: tests-${{ runner.os }}-rust
        path: target/nextest/ci/test-results.xml
  python:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.11, 3.12, 3.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Test
        run: uv run --group cov --directory python/clogbox --python ${{ matrix.python }} pytest --junitxml=junit/test-results.xml --cov=src --cov-report=xml
      - name: Generate coverage
        run: uv run --group cov --directory python/clogbox coverage xml
      - name: Cache venv
        uses: actions/cache@v4
        with:
          path: python/clogbox/.venv
          key: ${{ runner.os }}-py${{ matrix.python }}-uv
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-${{ runner.os }}-py${{ matrix.python }}
          path: python/clogbox/junit/test-results.xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ runner.os }}-py${{ matrix.python }}
          path: python/clogbox/coverage.xml
  summary:
    runs-on: ubuntu-latest
    needs: [rust, python]
    if: always()
    steps:
      - name: Download test-results.xml
        uses: actions/download-artifact@v4
        with:
          merge-multiple: 'false'
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "**/test-results.xml"
      - name: Coverage report
        uses: im-open/code-coverage-report-generator@v5
        with:
          reports: '**/coverage.xml'
          targetdir: '.'
          reporttypes: 'MarkdownSummary'
      - name: Create a PR comment from the summary file
        uses: im-open/process-code-coverage-summary@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          summary-file: Summary.md
          create-pr-comment: 'false'
      - name: Set report as step summary
        run: "< Summary.md > $GITHUB_STEP_SUMMARY"
